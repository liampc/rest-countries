{"version":3,"sources":["layout/header/Header.js","components/Components.js","layout/main/Main.js","layout/page/Page.js","App.js","index.js"],"names":["Header","props","className","to","onClick","switchToDark","id","SearchBar","name","type","onChange","handleChange","value","placeholder","Select","handleClick","e","changeRegion","Card","style","backgroundImage","flag","population","toLocaleString","region","capital","Main","useState","allCountries","setAllCountries","setRegion","inputValue","setInputValue","searchResults","setSearchResults","useEffect","fetchCountries","elems","document","querySelectorAll","darkMode","forEach","el","classList","add","remove","display","area","a","fetch","data","json","countries","selectRegion","selections","querySelector","arrow","contains","searchCountry","target","map","country","alpha2Code","newRegion","innerText","Page","setCountry","currency","setCurrency","languages","setLanguages","setCodes","borders","setBorders","fetchCountry","console","log","match","params","response","currencies","updated","response2","data2","length","item","nativeName","subregion","topLevelDomain","lang","index","App","setDarkMode","basename","process","mode","innerHTML","exact","path","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b53ecab9.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './_header.scss'\nimport {Link} from 'react-router-dom'\n\n\n\nconst Header = (props) => {\n\n    return (\n        <header className=\"header to-switch\">\n            <div className=\"header__banner container\">\n                <Link to={'/'}><h1 className=\"header__logo\">Where in the world?</h1></Link>\n                <p className=\"header__switch to-switch\" onClick={props.switchToDark}>\n                    <i></i>\n                    <p><span id=\"mode\">Dark</span> Mode</p>\n                </p>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react'\nimport './_components.scss'\nimport {Link} from 'react-router-dom'\n\n\nconst SearchBar = (props) => {\n    return (\n        <form className=\"searchBar to-switch\">\n            <i><ion-icon name=\"search-outline\"></ion-icon></i>\n            <input type=\"text\" onChange={props.handleChange} value={props.value} placeholder=\"Search for a country...\" />\n        </form>\n    )\n}\n\nconst Select = (props) => {\n    return (\n        <div className=\"select\"> \n            <div className=\"select__title to-switch\" onClick={props.handleClick}>Filter by region <i id=\"arrow\"><ion-icon name=\"chevron-down-outline\"></ion-icon></i></div>\n            <div className=\"select__selection hide to-switch\">\n                <div onClick={(e) => props.changeRegion(e)} className=\"\">Africa</div>\n                <div onClick={(e) => props.changeRegion(e)}>Americas</div>\n                <div onClick={(e) => props.changeRegion(e)}>Asia</div>\n                <div onClick={(e) => props.changeRegion(e)}>Europe</div>\n                <div onClick={(e) => props.changeRegion(e)}>Oceania</div>\n            </div>\n        </div>\n    )\n}\n\nconst Card = (props) => {\n    return (\n        <div className=\"card to-switch\">\n            <Link to={`${props.name}`}>\n                <div className=\"card__pic\" style={{backgroundImage: `url(${props.flag})`}}></div>\n                <div className=\"card__info container-padding-lr\">\n                    <h2><Link to={`${props.name}`}>{props.name}</Link></h2>\n                    <p>Population: <span>{props.population.toLocaleString()}</span></p>\n                    <p>Region: <span>{props.region}</span></p>\n                    <p>Capital: <span>{props.capital}</span></p>\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nexport {\n    SearchBar,\n    Select,\n    Card\n}","import React, {useState, useEffect}  from 'react'\nimport './_main.scss';\nimport {SearchBar, Select, Card} from '../../components/Components';\n\n\nconst Main = (props) => {\n\n    const [allCountries, setAllCountries] = useState([])\n    const [region, setRegion] = useState('europe')\n    const [inputValue, setInputValue] = useState('')\n    const [searchResults, setSearchResults] = useState([])\n    \n\n    useEffect(() => {\n        fetchCountries();\n\n        let elems = document.querySelectorAll('.to-switch')\n        if (props.darkMode === true){\n            elems.forEach(el => {\n                el.classList.add('dark')\n            })\n        } else if (props.darkMode === false){\n            elems.forEach(el => {\n                el.classList.remove('dark')\n            })\n        }\n\n    }, [allCountries,region, inputValue, searchResults])\n\n    const fetchCountries = async (area) => {\n        area = region\n        const data = await fetch(`https://restcountries.eu/rest/v2/region/${area}`)\n        const countries =  await data.json()\n        setAllCountries(countries)\n  \n    }\n\n  \n    const selectRegion = () => {\n       \n        let selections = document.querySelector('.select__selection')\n        let arrow = document.querySelector('#arrow')\n        if (selections.classList.contains('hide')){\n            selections.classList.remove('hide')\n            arrow.classList.add('open')\n        } else {\n            selections.classList.add('hide')\n            arrow.classList.remove('open')\n        }\n    }\n\n    const changeRegion = (e) => {\n        let newRegion = e.target.innerText\n        setRegion(newRegion)\n        selectRegion()\n    }\n\n    const searchCountry = async (e) => {\n        const value = e.target.value\n        setInputValue(value)\n        const data = await fetch(`https://restcountries.eu/rest/v2/name/${inputValue}`)\n        const countries = await data.json()\n        setSearchResults(countries)\n    }\n \n    let display;\n    if (inputValue !== \"\"){\n        try {\n            display = searchResults.map(country => {\n                    return <Card \n                                key={country.alpha2Code}\n                                name={country.name} \n                                population={country.population}\n                                region={country.region}\n                                capital={country.capital}\n                                flag={country.flag}\n                            />\n                })\n        } catch {\n            display = \"No results found\"\n        }\n\n    } else if (inputValue === \"\") {\n        display = allCountries.map(country => {\n            return <Card \n                        key={country.alpha2Code}\n                        name={country.name} \n                        population={country.population}\n                        region={country.region}\n                        capital={country.capital}\n                        flag={country.flag}\n                    />\n        })\n    }\n       \n    \n\n\n    return (\n        <main className=\"main to-switch\">\n            <nav className=\"nav container\">\n                <div className=\"nav__search\">\n                    <SearchBar \n                        handleChange={searchCountry}\n                        value={inputValue}\n                    />\n                </div>\n                <div className=\"nav__select\">\n                    <Select \n                        handleClick={selectRegion}\n                        changeRegion={changeRegion}\n                    />\n                </div>\n            </nav>\n            <div className=\"list container\">\n                {display}\n            </div>\n        </main>\n    )\n}\n\nexport default Main","import React, {useState, useEffect} from 'react'\nimport './_page.scss'\nimport {Link} from 'react-router-dom';\n\n\nconst Page = ( props ) => {\n\n    const [country, setCountry] = useState([])\n    const [currency, setCurrency] = useState('')\n    const [languages, setLanguages] = useState([])\n    const [codes, setCodes] = useState('')\n    const [borders, setBorders] = useState([])\n    \n\n    useEffect(() => {\n        fetchCountry()\n        console.log(props.darkMode)\n       \n\n        let elems = document.querySelectorAll('.to-switch')\n        if (props.darkMode === true){\n            elems.forEach(el => {\n                el.classList.add('dark')\n            })\n        } else if (props.darkMode === false){\n            elems.forEach(el => {\n                el.classList.remove('dark')\n            })\n        }\n\n    }, [])\n\n\n    const fetchCountry = async () => {\n        const response = await fetch(`https://restcountries.eu/rest/v2/name/${props.match.params.id}?fullText=true`)\n        const data = await response.json()\n        setCountry(data[0])\n        setCurrency(data[0].currencies[0].name)\n        setLanguages(data[0].languages)\n        let updated = ''\n\n        try {\n            data[0].borders.forEach(el => {\n                updated += `${el};`\n            })\n        \n            setCodes(updated)\n        \n            const response2 = await fetch(`https://restcountries.eu/rest/v2/alpha?codes=${updated}`)\n            const data2 = await response2.json()\n            setBorders(data2)\n        } catch {\n            setBorders([])\n        }\n\n    }\n\n    let display;\n    if (borders.length < 1){\n        display = ''\n    } else if (borders.length > 1 && props.darkMode === true) {\n        display = borders.map(item => {\n            return <div key={item.name} className=\"detail__card to-switch dark\">{item.name}</div>\n        })\n    } else if (borders.length > 1 && props.darkMode === false) {\n        display = borders.map(item => {\n            return <div key={item.name} className=\"detail__card to-switch\">{item.name}</div>\n        })\n    }\n   \n\n\n    return (\n        <div className=\"page to-switch\">\n            <div className=\"page__nav container\">\n                 <div className=\"button to-switch\">\n                    <Link to={'/'}><i><ion-icon name=\"arrow-back-outline\"></ion-icon></i>Back</Link>\n                 </div>\n            </div>\n            <div className=\"page__detail container\">\n                <div className=\"detail\">\n                    <div className=\"detail__flag\" style={{backgroundImage: `url(${country.flag})`}}></div>\n                    <div className=\"detail__info\">\n                        <h2>{country.name}</h2>\n                        <div className=\"detail__group\">\n                            <div>\n                                <p>Native Name: <span>{country.nativeName}</span></p>\n                                <p>Population: <span>{country.population ? country.population.toLocaleString() : ''}</span></p>\n                                <p>Region: <span>{country.region}</span></p>\n                                <p>Subregion: <span>{country.subregion}</span></p>\n                                <p>Capital: <span>{country.capital}</span></p>\n                            </div>\n                            <div>\n                                <p>Top Level Domain: <span>{country.topLevelDomain}</span></p>\n                                <p>Currencies: <span>{currency}</span></p>\n                                <p>Languages: \n                                    {languages.map((lang, index) => {\n    \n                                        if (index === languages.length - 1){\n                                            return <span key={lang.name}> {lang.name}</span>\n                                        } else {\n                                            return <span key={lang.name}> {lang.name}, </span>\n                                        }\n                                      \n                                    })}\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"detail__border\">\n                            <h3>Border Countries:</h3>\n                            <div className=\"detail__countries to-switch\">\n                                    {display}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Page","import './App.scss';\nimport React, {useState, useEffect} from 'react'\nimport {HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './layout/header/Header'\nimport Main from './layout/main/Main'\nimport Page from './layout/page/Page'\n\nfunction App() {\n\n  const [darkMode, setDarkMode] = useState()\n\n    const switchToDark = () => {\n\n\n    let elems = document.querySelectorAll('.to-switch')\n    let mode = document.querySelector('#mode')\n\n    elems.forEach(el => {\n      if (el.classList.contains('dark')){\n        setDarkMode(false)\n        el.classList.remove('dark')\n        mode.innerHTML = 'Dark'\n      } else {\n        setDarkMode(true)\n        el.classList.add('dark')\n        mode.innerHTML = 'Light'\n\n      }\n    })\n    \n  }\n\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Header switchToDark={switchToDark} />\n        <Route>\n          <Route exact path=\"/\" render={(props) => <Main {...props} darkMode={darkMode} /> }/>\n          <Route path=\"/:id\" render={(props) => <Page {...props} darkMode={darkMode} />} />\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}